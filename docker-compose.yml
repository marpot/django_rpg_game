services:
  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: django_rpg
    volumes:
      - ./data/db:/var/lib/postgresql/data
    networks:
      - rpg_network
    ports:
      - "5432:5432"

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    networks:
      - rpg_network

  backend:
    build:
      context: ./backend
    environment:
      - POSTGRES_DB=django_rpg
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - REDIS_HOST=redis
      - ALLOWED_HOSTS=*
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./backend/wait-for-it.sh:/app/wait-for-it.sh
      - ./backend/entrypoint.sh:/app/entrypoint.sh  
    depends_on:
      - db
      - redis
    networks:
      - rpg_network
    command: sh /app/entrypoint.sh  # Uruchomienie entrypoint.sh, które używa wait-for-it

  frontend:
    build:
      context: ./frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - rpg_network

networks:
  rpg_network:
    driver: bridge
